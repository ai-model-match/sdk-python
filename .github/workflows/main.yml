on:
  push:
    tags:
      - "*.*.*" # Tag used to manage production versions
      - "*.*.*-RC" # Tag used to manage release candidate versions
  pull_request:
    branches: ["main"]
  workflow_dispatch:

# See https://docs.github.com/en/actions/using-jobs/using-concurrency
# Enforce 1 job running
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    # Deploy only when a tag is specified
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      # Pull the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Use Python 3.x
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # Build project
      - name: Build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          python -m pip install build
          python -m build

      # Upload the build distributions as an artifact
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/ai-model-match

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
